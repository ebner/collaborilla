<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="compilation" name="collaborilla">

	<property name="java_version"			value="1.4"/>
	<property name="build.compiler"			value="javac${java_version}"/>

	<property name="main_class"				value="se.kth.nada.kmr.collaborilla.service.CollaborillaService"/>
	
	<property name="source_string"			value="src"/>
	<property name="build_string"			value="bin"/>
	<property name="distribution_string"	value="deploy"/>
	<property name="tarballs_string"		value="tarballs"/>
	<property name="settings_string"		value="settings"/>
	<property name="library_string"			value="lib"/>
	<property name="javadoc_string"			value="doc"/>
	<property name="tmp_string"				value="tmp-build"/>
		
	<property name="source_directory"		location="${source_string}"/>
	<property name="build_directory"		location="${build_string}"/>
	<property name="distribution_directory"	location="${distribution_string}"/>
	<property name="tarballs_directory"		location="${tarballs_string}"/>
	<property name="settings_directory"		location="${settings_string}"/>
	<property name="library_directory"		location="${library_string}"/>
	<property name="javadoc_directory"		location="${javadoc_string}"/>
	<property name="tmp_directory"			location="${tmp_string}"/>
	
	<property name="dependency_jars"		value="jldap.jar"/>
	
    <path id="project_classpath">
        <pathelement location="${build_directory}"/>
        <pathelement location="${library_string}/jldap.jar"/>
    </path>
	
	<target name="all" depends="jar,zip" description="Builds everything"/>
	
    <target name="init" description="Creates the build directory">
        <mkdir dir="${build_directory}"/>
    </target>
	
    <target name="clean" description="Deletes the build directory">
    	<delete dir="${build_directory}"/>
    </target>
	
	<target name="compilation" depends="clean,init" description="Compile source files">
		<echo>Target platform is Java ${java_version}</echo>
		<javac
			srcdir="${source_directory}"
			destdir="${build_directory}"
			classpathref="project_classpath"
			deprecation="true"
			excludes="**/test/*"
			source="${java_version}"
			target="${java_version}"
		>
		</javac>
	</target>
	
    <target name="init_javadoc" description="Creates the javadoc directory">
        <mkdir dir="${javadoc_directory}"/>
    </target>
	
    <target name="clean_javadoc" description="Deletes the javadoc directory">
        <delete dir="${javadoc_directory}"/>
    </target>
	
	<target name="javadoc" depends="clean_javadoc,init_javadoc" description="Javadoc creation">
	    <javadoc
	    	doctitle="Collaborilla"
			sourcepath="${source_directory}"
			destdir="${javadoc_directory}"
			classpathref="project_classpath"
			packagenames="se.kth.nada.kmr.collaborilla.*"
			excludepackagenames="**.test"
			author="true"
			breakiterator="yes"
			noindex="false"
			nonavbar="false"
			notree="false"
			splitindex="true"
			version="true"
			use="true">
    	</javadoc>
	</target>
	
	<target name ="jar" depends="compilation" description="Create a JAR">
		<jar destfile="${distribution_directory}/${ant.project.name}.jar">
			<fileset dir="${build_directory}"/>
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="${main_class}"/>
			</manifest>
		</jar>
	</target>
	
    <target name="clean_deploy" description="Deletes the deploy directory">
    	<delete dir="${distribution_directory}"/>
    </target>
	
	<target name="init_deploy" description="Creates the deploy directory">
		<mkdir dir="${distribution_directory}"/>
	</target>
	
	<target name="deploy" depends="clean_deploy,init_deploy,javadoc,jar">
		<copy file="CHANGELOG" todir="${distribution_directory}"/>
		<copy file="LICENSE" todir="${distribution_directory}"/>
		<copy file="LICENSE_JLDAP" todir="${distribution_directory}"/>
		<copy file="README" todir="${distribution_directory}"/>
		<copy todir="${distribution_directory}">
			<fileset dir="${settings_directory}" includes="**/*"/>
		</copy>
		<copy todir="${distribution_directory}/${library_string}">
			<fileset dir="${library_directory}" includes="${dependency_jars}"/>
		</copy>
		<copy todir="${distribution_directory}/${javadoc_string}">
			<fileset dir="${javadoc_directory}"/>
		</copy>
		<chmod dir="${distribution_directory}" perm="770" includes="**/*.sh"/>
		<chmod dir="${distribution_directory}" perm="660" includes="**/*.properties"/>
	</target>
	
	<!--
	<target name="jar_all" depends="compilation" description="Generate a JAR that includes all dependencies">
		<mkdir dir="${distribution_directory}"/>
		<property name="distname" value="all"/>
		<mkdir dir="${tmp_directory}"/>
		<unjar dest="${tmp_directory}">
			<fileset dir="${library_directory}" includes="${dependency_jars}"/>
		</unjar>
		<jar destfile="${distribution_directory}/${ant.project.name}-${distname}.jar">
			<fileset dir="${build_directory}"/>
			<fileset dir="${tmp_directory}"/>
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="${main_class}"/>
			</manifest>
		</jar>
		<delete dir="${tmp_directory}"/>
	</target>
	-->
	
	<target name="init_tstamp">
		<tstamp>
			<format property="touch.time" pattern="yyyyMMddHHmm"/>
		</tstamp>
		<echo>Initialized timestamp with touch.time = ${touch.time}</echo>
		<!--<echo>Initialized timestamp with DSTAMP:${DSTAMP}, TSTAMP:${TSTAMP}, TODAY:${TODAY}</echo>-->
	</target>
	
	<target name="init_release" description="Creates the javadoc directory">
		<mkdir dir="${tarballs_directory}"/>
    </target>
	
	<target name="zip" depends="init_tstamp,init_release,javadoc,deploy" description="Generates a ZIP">
		<delete includeemptydirs="true">
			<fileset dir="${tarballs_directory}" includes="*.zip"/>
		</delete>
		<zip destfile="${tarballs_directory}/${ant.project.name}-${touch.time}.zip">
			<zipfileset dir="${distribution_directory}" prefix="" includes="**/*"/>
			<!--<zipfileset dir="${source_directory}" prefix="${source_string}"/>-->			
			<!--<zipfileset dir="${library_directory}" prefix="${library_string}" includes="${dependency_jars}"/>-->
			<!--<zipfileset dir="." includes="README*.txt"/>-->
			<!--<zipfileset dir="." includes="ReleaseNotes.txt"/>-->
		</zip>
	</target>
	
	<target name="gzip" depends="init_tstamp,init_release,javadoc,deploy" description="Generates a TAR/GZIP">
		<delete includeemptydirs="true">
			<fileset dir="${tarballs_directory}" includes="*.tar.gz"/>
		</delete>
		<tar destfile="${tarballs_directory}/${ant.project.name}-${touch.time}.tar.gz" compression="gzip">
			<tarfileset dir="${distribution_directory}" prefix="" includes="**/*"/>
			<!--<tarfileset dir="${source_directory}" prefix="${source_string}"/>-->
		</tar>
	</target>
	
	<target name="bzip2" depends="init_tstamp,init_release,javadoc,deploy" description="Generates a TAR/BZIP2">
		<delete includeemptydirs="true">
			<fileset dir="${tarballs_directory}" includes="*.tar.bz2"/>
		</delete>
		<tar destfile="${tarballs_directory}/${ant.project.name}-${touch.time}.tar.bz2" compression="bzip2">
			<tarfileset dir="${distribution_directory}" prefix="" includes="**/*"/>
			<!--<tarfileset dir="${source_directory}" prefix="${source_string}"/>-->
		</tar>
	</target>
	
	<target name="release" depends="zip,gzip,bzip2" description="Generates archive files in the formats ZIP, TAR/GZIP and TAR/BZIP2">
	</target>
	
</project>
